"use strict";(self.webpackChunkchatgpt_api=self.webpackChunkchatgpt_api||[]).push([[555],{1562:(v,y,n)=>{n.d(y,{l:()=>p});var l=n(15861),g=n(61083);class p{constructor(a,s,t){Object.defineProperty(this,"memory",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"verbose",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"callbackManager",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.memory=a,this.verbose=s??!!t,this.callbackManager=t??(0,g.Lo)()}run(a){var s=this;return(0,l.Z)(function*(){if(1!==s.inputKeys.length)throw new Error(`Chain ${s._chainType()} expects multiple inputs, cannot use 'run' `);const e={[s.inputKeys[0]]:a},u=yield s.call(e),i=Object.keys(u);if(1===i.length)return u[i[0]];throw new Error("return values have multiple keys, `run` only supported when one key currently")})()}call(a){var s=this;return(0,l.Z)(function*(){const t={...a};if(null!=s.memory){const u=yield s.memory.loadMemoryVariables(a);for(const[i,o]of Object.entries(u))t[i]=o}let e;yield s.callbackManager.handleChainStart({name:s._chainType()},t,s.verbose);try{e=yield s._call(t)}catch(u){throw yield s.callbackManager.handleChainError(u,s.verbose),u}return yield s.callbackManager.handleChainEnd(e,s.verbose),null!=s.memory&&(yield s.memory.saveContext(a,e)),e})()}apply(a){var s=this;return(0,l.Z)(function*(){return Promise.all(a.map(function(){var t=(0,l.Z)(function*(e){return s.call(e)});return function(e){return t.apply(this,arguments)}}()))})()}static deserialize(a,s={}){return(0,l.Z)(function*(){switch(a._type){case"llm_chain":{const{LLMChain:t}=yield Promise.resolve().then(n.bind(n,40443));return t.deserialize(a)}case"stuff_documents_chain":{const{StuffDocumentsChain:t}=yield n.e(819).then(n.bind(n,70889));return t.deserialize(a)}case"vector_db_qa":{const{VectorDBQAChain:t}=yield n.e(202).then(n.bind(n,59202));return t.deserialize(a,s)}default:throw new Error(`Invalid prompt type in config: ${a._type}`)}})()}}},40443:(v,y,n)=>{n.r(y),n.d(y,{ConversationChain:()=>h,LLMChain:()=>i});var l=n(15861),g=n(1562),c=n(28256),p=n(74010);class f extends p.K3{constructor(r){super(),Object.defineProperty(this,"messages",{enumerable:!0,configurable:!0,writable:!0,value:[]}),this.messages=r??[]}addUserMessage(r){this.messages.push(new p.Z(r))}addAIChatMessage(r){this.messages.push(new p.Ck(r))}clear(){var r=this;return(0,l.Z)(function*(){r.messages=[]})()}}class a extends c.fF{constructor(r){super(),Object.defineProperty(this,"chatHistory",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnMessages",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.chatHistory=r?.chatHistory??new f,this.returnMessages=r?.returnMessages??this.returnMessages,this.inputKey=r?.inputKey??this.inputKey,this.outputKey=r?.outputKey??this.outputKey}saveContext(r,m){var d=this;return(0,l.Z)(function*(){d.chatHistory.addUserMessage((0,c.d9)(r,d.inputKey)),d.chatHistory.addAIChatMessage((0,c.d9)(m,d.outputKey))})()}clear(){var r=this;return(0,l.Z)(function*(){yield r.chatHistory.clear()})()}}class s extends a{constructor(r){super({chatHistory:r?.chatHistory,returnMessages:r?.returnMessages??!1,inputKey:r?.inputKey,outputKey:r?.outputKey}),Object.defineProperty(this,"humanPrefix",{enumerable:!0,configurable:!0,writable:!0,value:"Human"}),Object.defineProperty(this,"aiPrefix",{enumerable:!0,configurable:!0,writable:!0,value:"AI"}),Object.defineProperty(this,"memoryKey",{enumerable:!0,configurable:!0,writable:!0,value:"history"}),this.humanPrefix=r?.humanPrefix??this.humanPrefix,this.aiPrefix=r?.aiPrefix??this.aiPrefix,this.memoryKey=r?.memoryKey??this.memoryKey}loadMemoryVariables(r){var m=this;return(0,l.Z)(function*(){return m.returnMessages?{[m.memoryKey]:m.chatHistory.messages}:{[m.memoryKey]:(0,c.zs)(m.chatHistory.messages)}})()}}var t=n(194),e=n(21782),u=n(88121);class i extends g.l{get inputKeys(){return this.prompt.inputVariables}constructor(r){if(super(r.memory,r.verbose,r.callbackManager),Object.defineProperty(this,"prompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"llm",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"text"}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.prompt=r.prompt,this.llm=r.llm,this.outputKey=r.outputKey??this.outputKey,this.outputParser=r.outputParser??this.outputParser,this.prompt.outputParser){if(this.outputParser)throw new Error("Cannot set both outputParser and prompt.outputParser");this.outputParser=this.prompt.outputParser}}_getFinalOutput(r,m){var d=this;return(0,l.Z)(function*(){const P=r[0].text;let w;return w=d.outputParser?yield d.outputParser.parseWithPrompt(P,m):P,w})()}_call(r){var m=this;return(0,l.Z)(function*(){let d;"stop"in r&&Array.isArray(r.stop)&&(d=r.stop);const P=yield m.prompt.formatPromptValue(r),{generations:w}=yield m.llm.generatePrompt([P],d);return{[m.outputKey]:yield m._getFinalOutput(w[0],P)}})()}predict(r){var m=this;return(0,l.Z)(function*(){return(yield m.call(r))[m.outputKey]})()}_chainType(){return"llm_chain"}static deserialize(r){return(0,l.Z)(function*(){const{llm:m,prompt:d}=r;if(!m)throw new Error("LLMChain must have llm");if(!d)throw new Error("LLMChain must have prompt");return new i({llm:yield u.q.deserialize(m),prompt:yield e.dy.deserialize(d)})})()}serialize(){return{_type:this._chainType(),llm:this.llm.serialize(),prompt:this.prompt.serialize()}}}class h extends i{constructor(r){super({prompt:r.prompt??new t.PromptTemplate({template:"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n{history}\nHuman: {input}\nAI:",inputVariables:["history","input"]}),llm:r.llm,outputKey:r.outputKey??"response"}),this.memory=r.memory??new s}}},28256:(v,y,n)=>{n.d(y,{d9:()=>g,fF:()=>l,zs:()=>c});class l{}const g=(p,f)=>{if(void 0!==f)return p[f];const a=Object.keys(p);if(1===a.length)return p[a[0]];throw new Error(`input values have multiple keys, memory only supported when one key currently: ${a}`)};function c(p,f="Human",a="AI"){const s=[];for(const t of p){let e;if("human"===t._getType())e=f;else if("ai"===t._getType())e=a;else if("system"===t._getType())e="System";else{if("generic"!==t._getType())throw new Error(`Got unsupported message type: ${t}`);e=t.role}s.push(`${e}: ${t.text}`)}return s.join("\n")}},21782:(v,y,n)=>{n.d(y,{Al:()=>f,dy:()=>p});var l=n(15861),g=n(74010);class c{constructor(t){Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.value=t}toString(){return this.value}toChatMessages(){return[new g.Z(this.value)]}}class p{constructor(t){Object.defineProperty(this,"inputVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"partialVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0});const{inputVariables:e}=t;if(e.includes("stop"))throw new Error("Cannot have an input variable named 'stop', as it is used internally, please rename.");Object.assign(this,t)}mergePartialAndUserVariables(t){var e=this;return(0,l.Z)(function*(){const u=e.partialVariables??{},i={};for(const[h,b]of Object.entries(u))i[h]="string"==typeof b?b:yield b();return{...i,...t}})()}static deserialize(t){return(0,l.Z)(function*(){switch(t._type){case"prompt":{const{PromptTemplate:e}=yield Promise.resolve().then(n.bind(n,194));return e.deserialize(t)}case void 0:{const{PromptTemplate:e}=yield Promise.resolve().then(n.bind(n,194));return e.deserialize({...t,_type:"prompt"})}case"few_shot":{const{FewShotPromptTemplate:e}=yield n.e(811).then(n.bind(n,80811));return e.deserialize(t)}default:throw new Error(`Invalid prompt type in config: ${t._type}`)}})()}}class f extends p{formatPromptValue(t){var e=this;return(0,l.Z)(function*(){const u=yield e.format(t);return new c(u)})()}}},194:(v,y,n)=>{n.r(y),n.d(y,{PromptTemplate:()=>p});var l=n(15861),g=n(21782),c=n(33087);class p extends g.Al{constructor(a){if(super(a),Object.defineProperty(this,"template",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"templateFormat",{enumerable:!0,configurable:!0,writable:!0,value:"f-string"}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,a),this.validateTemplate){let s=this.inputVariables;this.partialVariables&&(s=s.concat(Object.keys(this.partialVariables))),(0,c.af)(this.template,this.templateFormat,s)}}_getPromptType(){return"prompt"}format(a){var s=this;return(0,l.Z)(function*(){const t=yield s.mergePartialAndUserVariables(a);return(0,c.SM)(s.template,s.templateFormat,t)})()}static fromExamples(a,s,t,e="\n\n",u=""){const i=[u,...a,s].join(e);return new p({inputVariables:t,template:i})}static fromTemplate(a,{templateFormat:s="f-string",...t}={}){const e=new Set;return(0,c.$M)(a,s).forEach(u=>{"variable"===u.type&&e.add(u.name)}),new p({inputVariables:[...e],templateFormat:s,template:a,...t})}partial(a){var s=this;return(0,l.Z)(function*(){const t={...s};return t.inputVariables=s.inputVariables.filter(e=>!(e in a)),t.partialVariables={...s.partialVariables??{},...a},new p(t)})()}serialize(){if(void 0!==this.outputParser)throw new Error("Cannot serialize a prompt template with an output parser");return{_type:this._getPromptType(),input_variables:this.inputVariables,template:this.template,template_format:this.templateFormat}}static deserialize(a){return(0,l.Z)(function*(){if(!a.template)throw new Error("Prompt template must have a template");return new p({inputVariables:a.input_variables,template:a.template,templateFormat:a.template_format})})()}}},33087:(v,y,n)=>{n.d(y,{$M:()=>a,SM:()=>f,af:()=>s});const l=t=>{const e=t.split(""),u=[],i=(h,b)=>{for(let r=b;r<e.length;r+=1)if(h.includes(e[r]))return r;return-1};let o=0;for(;o<e.length;)if("{"===e[o]&&o+1<e.length&&"{"===e[o+1])u.push({type:"literal",text:"{"}),o+=2;else if("}"===e[o]&&o+1<e.length&&"}"===e[o+1])u.push({type:"literal",text:"}"}),o+=2;else if("{"===e[o]){const h=i("}",o);if(h<0)throw new Error("Unclosed '{' in template.");u.push({type:"variable",name:e.slice(o+1,h).join("")}),o=h+1}else{if("}"===e[o])throw new Error("Single '}' in template.");{const h=i("{}",o),b=(h<0?e.slice(o):e.slice(o,h)).join("");u.push({type:"literal",text:b}),o=h<0?e.length:h}}return u},c={"f-string":(t,e)=>l(t).reduce((u,i)=>{if("variable"===i.type){if(i.name in e)return u+e[i.name];throw new Error(`Missing value for input ${i.name}`)}return u+i.text},""),jinja2:(t,e)=>""},p={"f-string":l,jinja2:t=>[]},f=(t,e,u)=>c[e](t,u),a=(t,e)=>p[e](t),s=(t,e,u)=>{if(!(e in c)){const i=Object.keys(c);throw new Error(`Invalid template format. Got \`${e}\`;\n                         should be one of ${i}`)}try{const i=u.reduce((o,h)=>(o[h]="foo",o),{});f(t,e,i)}catch{throw new Error("Invalid prompt schema.")}}},74010:(v,y,n)=>{n.d(y,{Ck:()=>c,J:()=>f,K3:()=>u,MJ:()=>a,Z:()=>g,w:()=>p});class l{constructor(o){Object.defineProperty(this,"text",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.text=o}}class g extends l{_getType(){return"human"}}class c extends l{_getType(){return"ai"}}class p extends l{_getType(){return"system"}}class f extends l{constructor(o,h){super(o),Object.defineProperty(this,"role",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.role=h}_getType(){return"generic"}}class a{}class e extends Error{constructor(o){super(o)}}class u{}}}]);